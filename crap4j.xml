<?xml version="1.0" encoding="UTF-8"?>
<crap_result>
  <project/>
  <timestamp>2024-02-11 05:27:32</timestamp>
  <stats>
    <name>Method Crap Stats</name>
    <methodCount>252</methodCount>
    <crapMethodCount>5</crapMethodCount>
    <crapLoad>63</crapLoad>
    <totalCrap>1963.4</totalCrap>
    <crapMethodPercent>1.98</crapMethodPercent>
  </stats>
  <methods>
    <method>
      <package>App\Console</package>
      <className>App\Console\Kernel</className>
      <methodName>schedule</methodName>
      <methodSignature>schedule(Illuminate\Console\Scheduling\Schedule $schedule): void</methodSignature>
      <fullMethod>schedule(Illuminate\Console\Scheduling\Schedule $schedule): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Console</package>
      <className>App\Console\Kernel</className>
      <methodName>commands</methodName>
      <methodSignature>commands(): void</methodSignature>
      <fullMethod>commands(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Exceptions</package>
      <className>App\Exceptions\Handler</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Middleware</package>
      <className>App\Http\Middleware\Authenticate</className>
      <methodName>redirectTo</methodName>
      <methodSignature>redirectTo(Illuminate\Http\Request $request): ?string</methodSignature>
      <fullMethod>redirectTo(Illuminate\Http\Request $request): ?string</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Middleware</package>
      <className>App\Http\Middleware\RedirectIfAuthenticated</className>
      <methodName>handle</methodName>
      <methodSignature>handle(Illuminate\Http\Request $request, Closure $next, string $guards): Symfony\Component\HttpFoundation\Response</methodSignature>
      <fullMethod>handle(Illuminate\Http\Request $request, Closure $next, string $guards): Symfony\Component\HttpFoundation\Response</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Middleware</package>
      <className>App\Http\Middleware\TrustHosts</className>
      <methodName>hosts</methodName>
      <methodSignature>hosts(): array</methodSignature>
      <fullMethod>hosts(): array</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\AppServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\AppServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\AuthServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\BroadcastServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\EventServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\EventServiceProvider</className>
      <methodName>shouldDiscoverEvents</methodName>
      <methodSignature>shouldDiscoverEvents(): bool</methodSignature>
      <fullMethod>shouldDiscoverEvents(): bool</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\RouteServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Console\Commands</package>
      <className>Playground\Auth\Console\Commands\HashPassword</className>
      <methodName>handle</methodName>
      <methodSignature>handle()</methodSignature>
      <fullMethod>handle()</fullMethod>
      <crap>9.02</crap>
      <complexity>9</complexity>
      <coverage>93.75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>abilitiesByGroup</methodName>
      <methodSignature>abilitiesByGroup(string $group): array</methodSignature>
      <fullMethod>abilitiesByGroup(string $group): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>abilities</methodName>
      <methodSignature>abilities(Illuminate\Contracts\Auth\Authenticatable $user): array</methodSignature>
      <fullMethod>abilities(Illuminate\Contracts\Auth\Authenticatable $user): array</fullMethod>
      <crap>15.89</crap>
      <complexity>12</complexity>
      <coverage>70</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>init</methodName>
      <methodSignature>init(Illuminate\Contracts\Auth\Authenticatable $user, array $config): void</methodSignature>
      <fullMethod>init(Illuminate\Contracts\Auth\Authenticatable $user, array $config): void</fullMethod>
      <crap>48</crap>
      <complexity>16</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>listed</methodName>
      <methodSignature>listed(Illuminate\Contracts\Auth\Authenticatable $user): void</methodSignature>
      <fullMethod>listed(Illuminate\Contracts\Auth\Authenticatable $user): void</fullMethod>
      <crap>7.54</crap>
      <complexity>7</complexity>
      <coverage>77.78</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>sanctum</methodName>
      <methodSignature>sanctum(Laravel\Sanctum\Contracts\HasApiTokens $user): array</methodSignature>
      <fullMethod>sanctum(Laravel\Sanctum\Contracts\HasApiTokens $user): array</fullMethod>
      <crap>6.01</crap>
      <complexity>6</complexity>
      <coverage>93.75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>create</methodName>
      <methodSignature>create(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>create(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>delete</methodName>
      <methodSignature>delete(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>delete(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>detail</methodName>
      <methodSignature>detail(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>detail(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>edit</methodName>
      <methodSignature>edit(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>edit(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>forceDelete</methodName>
      <methodSignature>forceDelete(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>forceDelete(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>lock</methodName>
      <methodSignature>lock(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>lock(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>manage</methodName>
      <methodSignature>manage(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>manage(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>restore</methodName>
      <methodSignature>restore(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>restore(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>store</methodName>
      <methodSignature>store(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>store(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>update</methodName>
      <methodSignature>update(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>update(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>unlock</methodName>
      <methodSignature>unlock(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>unlock(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\Policy</className>
      <methodName>before</methodName>
      <methodSignature>before(Illuminate\Contracts\Auth\Authenticatable $user, $ability)</methodSignature>
      <fullMethod>before(Illuminate\Contracts\Auth\Authenticatable $user, $ability)</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\Policy</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>index(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\Policy</className>
      <methodName>view</methodName>
      <methodSignature>view(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>view(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>hasPrivilege</methodName>
      <methodSignature>hasPrivilege(Illuminate\Contracts\Auth\Authenticatable $user, string $privilege): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasPrivilege(Illuminate\Contracts\Auth\Authenticatable $user, string $privilege): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasRole(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>privilege</methodName>
      <methodSignature>privilege(string $ability): string</methodSignature>
      <fullMethod>privilege(string $ability): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>getEntity</methodName>
      <methodSignature>getEntity(): string</methodSignature>
      <fullMethod>getEntity(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>getPackage</methodName>
      <methodSignature>getPackage(): string</methodSignature>
      <fullMethod>getPackage(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>hasToken</methodName>
      <methodSignature>hasToken(): bool</methodSignature>
      <fullMethod>hasToken(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>getToken</methodName>
      <methodSignature>getToken(): ?Laravel\Sanctum\PersonalAccessToken</methodSignature>
      <fullMethod>getToken(): ?Laravel\Sanctum\PersonalAccessToken</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>setToken</methodName>
      <methodSignature>setToken(Laravel\Sanctum\PersonalAccessToken $token): self</methodSignature>
      <fullMethod>setToken(Laravel\Sanctum\PersonalAccessToken $token): self</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>verify</methodName>
      <methodSignature>verify(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>verify(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>getPackage</methodName>
      <methodSignature>getPackage(): string</methodSignature>
      <fullMethod>getPackage(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>getEntity</methodName>
      <methodSignature>getEntity(): string</methodSignature>
      <fullMethod>getEntity(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>getToken</methodName>
      <methodSignature>getToken(): ?Laravel\Sanctum\PersonalAccessToken</methodSignature>
      <fullMethod>getToken(): ?Laravel\Sanctum\PersonalAccessToken</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>hasToken</methodName>
      <methodSignature>hasToken(): bool</methodSignature>
      <fullMethod>hasToken(): bool</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>setToken</methodName>
      <methodSignature>setToken(Laravel\Sanctum\PersonalAccessToken $token): self</methodSignature>
      <fullMethod>setToken(Laravel\Sanctum\PersonalAccessToken $token): self</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>privilege</methodName>
      <methodSignature>privilege(string $ability): string</methodSignature>
      <fullMethod>privilege(string $ability): string</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>hasPrivilegeWildcard</methodName>
      <methodSignature>hasPrivilegeWildcard(string $privilege): bool</methodSignature>
      <fullMethod>hasPrivilegeWildcard(string $privilege): bool</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>hasPrivilege</methodName>
      <methodSignature>hasPrivilege(Illuminate\Contracts\Auth\Authenticatable $user, string $privilege): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasPrivilege(Illuminate\Contracts\Auth\Authenticatable $user, string $privilege): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>11.23</crap>
      <complexity>10</complexity>
      <coverage>76.92</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>hasPrivilegeSanctum</methodName>
      <methodSignature>hasPrivilegeSanctum(Laravel\Sanctum\Contracts\HasApiTokens $user, string $privilege): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasPrivilegeSanctum(Laravel\Sanctum\Contracts\HasApiTokens $user, string $privilege): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>getRolesForAdmin</methodName>
      <methodSignature>getRolesForAdmin(): array</methodSignature>
      <fullMethod>getRolesForAdmin(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>getRolesForAction</methodName>
      <methodSignature>getRolesForAction(): array</methodSignature>
      <fullMethod>getRolesForAction(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>isRoot</methodName>
      <methodSignature>isRoot(Illuminate\Contracts\Auth\Authenticatable $user): bool</methodSignature>
      <fullMethod>isRoot(Illuminate\Contracts\Auth\Authenticatable $user): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>getRolesToView</methodName>
      <methodSignature>getRolesToView(): array</methodSignature>
      <fullMethod>getRolesToView(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasRole(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>18</crap>
      <complexity>18</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot()</methodSignature>
      <fullMethod>boot()</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(): void</methodSignature>
      <fullMethod>about(): void</fullMethod>
      <crap>45.07</crap>
      <complexity>44</complexity>
      <coverage>91.8</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\ServiceProvider</className>
      <methodName>version</methodName>
      <methodSignature>version(): string</methodSignature>
      <fullMethod>version(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Blade</package>
      <className>Playground\Blade\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Blade</package>
      <className>Playground\Blade\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(): void</methodSignature>
      <fullMethod>about(): void</fullMethod>
      <crap>11</crap>
      <complexity>11</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Blade</package>
      <className>Playground\Blade\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Blade</package>
      <className>Playground\Blade\ServiceProvider</className>
      <methodName>version</methodName>
      <methodSignature>version(): string</methodSignature>
      <fullMethod>version(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Blade\View\Components\Forms</package>
      <className>Playground\Blade\View\Components\Forms\Column</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(bool $advanced, ?bool $autocomplete, string $class, string $column, string $default, string $described, ?bool $disabled, string $errorMessage, string $label, string $pattern, bool|string $placeholder, ?bool $readonly, array $rules, ?int $step, string $type, bool $withoutMargin)</methodSignature>
      <fullMethod>__construct(bool $advanced, ?bool $autocomplete, string $class, string $column, string $default, string $described, ?bool $disabled, string $errorMessage, string $label, string $pattern, bool|string $placeholder, ?bool $readonly, array $rules, ?int $step, string $type, bool $withoutMargin)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Blade\View\Components\Forms</package>
      <className>Playground\Blade\View\Components\Forms\Column</className>
      <methodName>render</methodName>
      <methodSignature>render(): \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View</methodSignature>
      <fullMethod>render(): \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Blade\View\Components\Forms</package>
      <className>Playground\Blade\View\Components\Forms\ColumnEditor</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(bool $advanced, string $class, string $column, string $errorMessage, string $label, array $rules, bool $withoutMargin, string $described, ?bool $disabled, ?bool $readonly)</methodSignature>
      <fullMethod>__construct(bool $advanced, string $class, string $column, string $errorMessage, string $label, array $rules, bool $withoutMargin, string $described, ?bool $disabled, ?bool $readonly)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Blade\View\Components\Forms</package>
      <className>Playground\Blade\View\Components\Forms\ColumnEditor</className>
      <methodName>render</methodName>
      <methodSignature>render(): \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View</methodSignature>
      <fullMethod>render(): \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Blade\View\Components\Forms</package>
      <className>Playground\Blade\View\Components\Forms\ColumnSelect</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(bool $advanced, ?bool $autocomplete, string $class, string $column, bool $default, string $described, ?bool $disabled, string $errorMessage, string $id, string $key, string $label, string $pattern, bool|string $placeholder, array $records, array $rules, string $step, ?bool $readonly, string $type, bool $withoutMargin)</methodSignature>
      <fullMethod>__construct(bool $advanced, ?bool $autocomplete, string $class, string $column, bool $default, string $described, ?bool $disabled, string $errorMessage, string $id, string $key, string $label, string $pattern, bool|string $placeholder, array $records, array $rules, string $step, ?bool $readonly, string $type, bool $withoutMargin)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Blade\View\Components\Forms</package>
      <className>Playground\Blade\View\Components\Forms\ColumnSelect</className>
      <methodName>render</methodName>
      <methodSignature>render(): \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View</methodSignature>
      <fullMethod>render(): \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Blade\View\Components</package>
      <className>Playground\Blade\View\Components\ModelFlag</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(array $columnMeta, mixed $value)</methodSignature>
      <fullMethod>__construct(array $columnMeta, mixed $value)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Blade\View\Components</package>
      <className>Playground\Blade\View\Components\ModelFlag</className>
      <methodName>render</methodName>
      <methodSignature>render(): \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View</methodSignature>
      <fullMethod>render(): \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Blade\View\Components\Table</package>
      <className>Playground\Blade\View\Components\Table\Data</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(string $id, string $icon, string $badge, bool $showPagination, bool $showLinks, bool $modelActions, bool $trashable, string $privilege, string $routeParameter, string $routeParameterKey, string $routeEdit, string $routeRestore, string $routeDelete, string $routeDeleteRelationship, string $routeDeleteRelationshipId, bool $collapsible, string $returnUrl, array $columns, array $filters, array $validated, array $meta, array $sort, array $page_options, int $sorts, array $styling, string $class, ?Illuminate\Pagination\LengthAwarePaginator $paginator)</methodSignature>
      <fullMethod>__construct(string $id, string $icon, string $badge, bool $showPagination, bool $showLinks, bool $modelActions, bool $trashable, string $privilege, string $routeParameter, string $routeParameterKey, string $routeEdit, string $routeRestore, string $routeDelete, string $routeDeleteRelationship, string $routeDeleteRelationshipId, bool $collapsible, string $returnUrl, array $columns, array $filters, array $validated, array $meta, array $sort, array $page_options, int $sorts, array $styling, string $class, ?Illuminate\Pagination\LengthAwarePaginator $paginator)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Blade\View\Components\Table</package>
      <className>Playground\Blade\View\Components\Table\Data</className>
      <methodName>render</methodName>
      <methodSignature>render(): \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View</methodSignature>
      <fullMethod>render(): \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\AuthenticatedSessionController</className>
      <methodName>create</methodName>
      <methodSignature>create(): Illuminate\View\View</methodSignature>
      <fullMethod>create(): Illuminate\View\View</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\AuthenticatedSessionController</className>
      <methodName>store</methodName>
      <methodSignature>store(Playground\Login\Blade\Http\Requests\LoginRequest $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>store(Playground\Login\Blade\Http\Requests\LoginRequest $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse</fullMethod>
      <crap>10</crap>
      <complexity>10</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\AuthenticatedSessionController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>destroy(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse</fullMethod>
      <crap>10</crap>
      <complexity>10</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\AuthenticatedSessionController</className>
      <methodName>token</methodName>
      <methodSignature>token(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>token(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\ConfirmablePasswordController</className>
      <methodName>show</methodName>
      <methodSignature>show(): Illuminate\View\View</methodSignature>
      <fullMethod>show(): Illuminate\View\View</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\ConfirmablePasswordController</className>
      <methodName>store</methodName>
      <methodSignature>store(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>store(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\Controller</className>
      <methodName>getRedirectUrl</methodName>
      <methodSignature>getRedirectUrl(): string</methodSignature>
      <fullMethod>getRedirectUrl(): string</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\Controller</className>
      <methodName>getPackageViewPathFromConfig</methodName>
      <methodSignature>getPackageViewPathFromConfig(mixed $config, string $view): string</methodSignature>
      <fullMethod>getPackageViewPathFromConfig(mixed $config, string $view): string</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\EmailVerificationController</className>
      <methodName>show</methodName>
      <methodSignature>show(Illuminate\Http\Request $request): \Illuminate\Http\Response|\Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse|\Illuminate\View\View</methodSignature>
      <fullMethod>show(Illuminate\Http\Request $request): \Illuminate\Http\Response|\Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse|\Illuminate\View\View</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\EmailVerificationController</className>
      <methodName>send</methodName>
      <methodSignature>send(Illuminate\Http\Request $request): \Illuminate\Http\RedirectResponse|\Illuminate\Http\Response</methodSignature>
      <fullMethod>send(Illuminate\Http\Request $request): \Illuminate\Http\RedirectResponse|\Illuminate\Http\Response</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\EmailVerificationController</className>
      <methodName>verify</methodName>
      <methodSignature>verify(Playground\Login\Blade\Http\Requests\EmailVerificationRequest $request): \Illuminate\Http\Response|\Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse|\Illuminate\View\View</methodSignature>
      <fullMethod>verify(Playground\Login\Blade\Http\Requests\EmailVerificationRequest $request): \Illuminate\Http\Response|\Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse|\Illuminate\View\View</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\NewPasswordController</className>
      <methodName>create</methodName>
      <methodSignature>create(Playground\Login\Blade\Http\Requests\NewPasswordRequest $request): Illuminate\View\View</methodSignature>
      <fullMethod>create(Playground\Login\Blade\Http\Requests\NewPasswordRequest $request): Illuminate\View\View</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\NewPasswordController</className>
      <methodName>store</methodName>
      <methodSignature>store(Playground\Login\Blade\Http\Requests\StoreNewPasswordRequest $request): Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>store(Playground\Login\Blade\Http\Requests\StoreNewPasswordRequest $request): Illuminate\Http\RedirectResponse</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\PasswordResetLinkController</className>
      <methodName>create</methodName>
      <methodSignature>create(): Illuminate\View\View</methodSignature>
      <fullMethod>create(): Illuminate\View\View</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\PasswordResetLinkController</className>
      <methodName>store</methodName>
      <methodSignature>store(Playground\Login\Blade\Http\Requests\PasswordResetLinkRequest $request): Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>store(Playground\Login\Blade\Http\Requests\PasswordResetLinkRequest $request): Illuminate\Http\RedirectResponse</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\RegisteredUserController</className>
      <methodName>create</methodName>
      <methodSignature>create(): Illuminate\View\View</methodSignature>
      <fullMethod>create(): Illuminate\View\View</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Controllers</package>
      <className>Playground\Login\Blade\Http\Controllers\RegisteredUserController</className>
      <methodName>store</methodName>
      <methodSignature>store(Playground\Login\Blade\Http\Requests\RegisterUserRequest $request): Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>store(Playground\Login\Blade\Http\Requests\RegisterUserRequest $request): Illuminate\Http\RedirectResponse</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Requests</package>
      <className>Playground\Login\Blade\Http\Requests\EmailVerificationRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize()</methodSignature>
      <fullMethod>authorize()</fullMethod>
      <crap>13</crap>
      <complexity>13</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Requests</package>
      <className>Playground\Login\Blade\Http\Requests\LoginRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Requests</package>
      <className>Playground\Login\Blade\Http\Requests\LoginRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Requests</package>
      <className>Playground\Login\Blade\Http\Requests\LoginRequest</className>
      <methodName>authenticate</methodName>
      <methodSignature>authenticate(): void</methodSignature>
      <fullMethod>authenticate(): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Requests</package>
      <className>Playground\Login\Blade\Http\Requests\LoginRequest</className>
      <methodName>ensureIsNotRateLimited</methodName>
      <methodSignature>ensureIsNotRateLimited(): void</methodSignature>
      <fullMethod>ensureIsNotRateLimited(): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Requests</package>
      <className>Playground\Login\Blade\Http\Requests\LoginRequest</className>
      <methodName>throttleKey</methodName>
      <methodSignature>throttleKey(): string</methodSignature>
      <fullMethod>throttleKey(): string</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Requests</package>
      <className>Playground\Login\Blade\Http\Requests\NewPasswordRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Requests</package>
      <className>Playground\Login\Blade\Http\Requests\PasswordResetLinkRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Requests</package>
      <className>Playground\Login\Blade\Http\Requests\PasswordResetLinkRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Requests</package>
      <className>Playground\Login\Blade\Http\Requests\RegisterUserRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Requests</package>
      <className>Playground\Login\Blade\Http\Requests\RegisterUserRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Requests</package>
      <className>Playground\Login\Blade\Http\Requests\StoreNewPasswordRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade\Http\Requests</package>
      <className>Playground\Login\Blade\Http\Requests\StoreNewPasswordRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade</package>
      <className>Playground\Login\Blade\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>7</crap>
      <complexity>7</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade</package>
      <className>Playground\Login\Blade\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(): void</methodSignature>
      <fullMethod>about(): void</fullMethod>
      <crap>23</crap>
      <complexity>23</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade</package>
      <className>Playground\Login\Blade\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade</package>
      <className>Playground\Login\Blade\ServiceProvider</className>
      <methodName>routes</methodName>
      <methodSignature>routes(array $routes): void</methodSignature>
      <fullMethod>routes(array $routes): void</fullMethod>
      <crap>9</crap>
      <complexity>9</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Login\Blade</package>
      <className>Playground\Login\Blade\ServiceProvider</className>
      <methodName>version</methodName>
      <methodSignature>version(): string</methodSignature>
      <fullMethod>version(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\AboutController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\View\View</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\View\View</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\BootstrapController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request): Illuminate\View\View</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request): Illuminate\View\View</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\BootstrapController</className>
      <methodName>theme</methodName>
      <methodSignature>theme(Illuminate\Http\Request $request): \Illuminate\Http\RedirectResponse|\Illuminate\View\View</methodSignature>
      <fullMethod>theme(Illuminate\Http\Request $request): \Illuminate\Http\RedirectResponse|\Illuminate\View\View</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\Controller</className>
      <methodName>response_payload</methodName>
      <methodSignature>response_payload(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>response_payload(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\Controller</className>
      <methodName>getPackageViewPathFromConfig</methodName>
      <methodSignature>getPackageViewPathFromConfig(mixed $config, string $controller, string $view): string</methodSignature>
      <fullMethod>getPackageViewPathFromConfig(mixed $config, string $controller, string $view): string</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\Controller</className>
      <methodName>init</methodName>
      <methodSignature>init(Illuminate\Http\Request $request): void</methodSignature>
      <fullMethod>init(Illuminate\Http\Request $request): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\DashboardController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse|\Illuminate\View\View</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse|\Illuminate\View\View</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\DashboardController</className>
      <methodName>init</methodName>
      <methodSignature>init(Illuminate\Http\Request $request): void</methodSignature>
      <fullMethod>init(Illuminate\Http\Request $request): void</fullMethod>
      <crap>5.01</crap>
      <complexity>5</complexity>
      <coverage>92.86</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\HomeController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse|\Illuminate\View\View</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse|\Illuminate\View\View</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\IndexController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse|\Illuminate\View\View</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse|\Illuminate\View\View</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\SitemapController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse|\Illuminate\View\View</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse|\Illuminate\View\View</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\SitemapController</className>
      <methodName>init</methodName>
      <methodSignature>init(Illuminate\Http\Request $request): void</methodSignature>
      <fullMethod>init(Illuminate\Http\Request $request): void</fullMethod>
      <crap>6.14</crap>
      <complexity>5</complexity>
      <coverage>64.29</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\SitemapController</className>
      <methodName>configs</methodName>
      <methodSignature>configs(): void</methodSignature>
      <fullMethod>configs(): void</fullMethod>
      <crap>17.58</crap>
      <complexity>7</complexity>
      <coverage>40</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\SitemapController</className>
      <methodName>sitemaps</methodName>
      <methodSignature>sitemaps(): void</methodSignature>
      <fullMethod>sitemaps(): void</fullMethod>
      <crap>57.05</crap>
      <complexity>10</complexity>
      <coverage>22.22</coverage>
      <crapLoad>8</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade\Http\Controllers</package>
      <className>Playground\Site\Blade\Http\Controllers\WelcomeController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\View\View</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\View\View</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade</package>
      <className>Playground\Site\Blade\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>7</crap>
      <complexity>7</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade</package>
      <className>Playground\Site\Blade\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(): void</methodSignature>
      <fullMethod>about(): void</fullMethod>
      <crap>23</crap>
      <complexity>23</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade</package>
      <className>Playground\Site\Blade\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade</package>
      <className>Playground\Site\Blade\ServiceProvider</className>
      <methodName>routes</methodName>
      <methodSignature>routes(array $routes): void</methodSignature>
      <fullMethod>routes(array $routes): void</fullMethod>
      <crap>9</crap>
      <complexity>9</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Site\Blade</package>
      <className>Playground\Site\Blade\ServiceProvider</className>
      <methodName>version</methodName>
      <methodSignature>version(): string</methodSignature>
      <fullMethod>version(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\CreateTrait</className>
      <methodName>test_guest_cannot_render_create_view</methodName>
      <methodSignature>test_guest_cannot_render_create_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_create_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\CreateTrait</className>
      <methodName>test_create_view_rendered_by_user_with_return_url</methodName>
      <methodSignature>test_create_view_rendered_by_user_with_return_url()</methodSignature>
      <fullMethod>test_create_view_rendered_by_user_with_return_url()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\CreateTrait</className>
      <methodName>test_create_info_with_user_using_json</methodName>
      <methodSignature>test_create_info_with_user_using_json()</methodSignature>
      <fullMethod>test_create_info_with_user_using_json()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\CreateTrait</className>
      <methodName>test_create_view_rendered_by_user_with_invalid_parameter</methodName>
      <methodSignature>test_create_view_rendered_by_user_with_invalid_parameter()</methodSignature>
      <fullMethod>test_create_view_rendered_by_user_with_invalid_parameter()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\DestroyTrait</className>
      <methodName>test_guest_cannot_destroy</methodName>
      <methodSignature>test_guest_cannot_destroy()</methodSignature>
      <fullMethod>test_guest_cannot_destroy()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\DestroyTrait</className>
      <methodName>test_destroy_as_standard_user_and_succeed</methodName>
      <methodSignature>test_destroy_as_standard_user_and_succeed()</methodSignature>
      <fullMethod>test_destroy_as_standard_user_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\DestroyTrait</className>
      <methodName>test_destroy_as_standard_user_and_succeed_with_force_delete</methodName>
      <methodSignature>test_destroy_as_standard_user_and_succeed_with_force_delete()</methodSignature>
      <fullMethod>test_destroy_as_standard_user_and_succeed_with_force_delete()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\DestroyTrait</className>
      <methodName>test_destroy_as_standard_user_using_json_and_succeed_with_no_content</methodName>
      <methodSignature>test_destroy_as_standard_user_using_json_and_succeed_with_no_content()</methodSignature>
      <fullMethod>test_destroy_as_standard_user_using_json_and_succeed_with_no_content()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\DestroyTrait</className>
      <methodName>test_destroy_as_standard_user_and_succeed_with_redirect_to_index_with_trash</methodName>
      <methodSignature>test_destroy_as_standard_user_and_succeed_with_redirect_to_index_with_trash()</methodSignature>
      <fullMethod>test_destroy_as_standard_user_and_succeed_with_redirect_to_index_with_trash()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\DestroyTrait</className>
      <methodName>test_destroy_with_user_role_and_get_denied_and_no_force_delete_allowed</methodName>
      <methodSignature>test_destroy_with_user_role_and_get_denied_and_no_force_delete_allowed()</methodSignature>
      <fullMethod>test_destroy_with_user_role_and_get_denied_and_no_force_delete_allowed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\DestroyTrait</className>
      <methodName>test_destroy_with_admin_role_and_succeed</methodName>
      <methodSignature>test_destroy_with_admin_role_and_succeed()</methodSignature>
      <fullMethod>test_destroy_with_admin_role_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\DestroyTrait</className>
      <methodName>test_destroy_with_admin_role_and_succeed_with_force_delete</methodName>
      <methodSignature>test_destroy_with_admin_role_and_succeed_with_force_delete()</methodSignature>
      <fullMethod>test_destroy_with_admin_role_and_succeed_with_force_delete()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\EditTrait</className>
      <methodName>test_guest_cannot_render_edit_view</methodName>
      <methodSignature>test_guest_cannot_render_edit_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_edit_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\EditTrait</className>
      <methodName>test_edit_view_rendered_by_user_with_return_url</methodName>
      <methodSignature>test_edit_view_rendered_by_user_with_return_url()</methodSignature>
      <fullMethod>test_edit_view_rendered_by_user_with_return_url()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\EditTrait</className>
      <methodName>test_edit_info_with_user_using_json</methodName>
      <methodSignature>test_edit_info_with_user_using_json()</methodSignature>
      <fullMethod>test_edit_info_with_user_using_json()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\EditTrait</className>
      <methodName>test_edit_view_rendered_by_user_with_invalid_parameter</methodName>
      <methodSignature>test_edit_view_rendered_by_user_with_invalid_parameter()</methodSignature>
      <fullMethod>test_edit_view_rendered_by_user_with_invalid_parameter()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\IndexTrait</className>
      <methodName>test_guest_cannot_render_index_view</methodName>
      <methodSignature>test_guest_cannot_render_index_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_index_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\IndexTrait</className>
      <methodName>test_index_view_rendered_by_user</methodName>
      <methodSignature>test_index_view_rendered_by_user()</methodSignature>
      <fullMethod>test_index_view_rendered_by_user()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\IndexTrait</className>
      <methodName>test_index_info_with_user_using_json</methodName>
      <methodSignature>test_index_info_with_user_using_json()</methodSignature>
      <fullMethod>test_index_info_with_user_using_json()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\LockTrait</className>
      <methodName>test_guest_cannot_lock</methodName>
      <methodSignature>test_guest_cannot_lock()</methodSignature>
      <fullMethod>test_guest_cannot_lock()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\LockTrait</className>
      <methodName>test_lock_as_standard_user_and_succeed</methodName>
      <methodSignature>test_lock_as_standard_user_and_succeed()</methodSignature>
      <fullMethod>test_lock_as_standard_user_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\LockTrait</className>
      <methodName>test_lock_as_standard_user_using_json_and_succeed</methodName>
      <methodSignature>test_lock_as_standard_user_using_json_and_succeed()</methodSignature>
      <fullMethod>test_lock_as_standard_user_using_json_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\LockTrait</className>
      <methodName>test_lock_as_standard_user_and_succeed_with_redirect_to_index_with_sorted_by_locked_desc</methodName>
      <methodSignature>test_lock_as_standard_user_and_succeed_with_redirect_to_index_with_sorted_by_locked_desc()</methodSignature>
      <fullMethod>test_lock_as_standard_user_and_succeed_with_redirect_to_index_with_sorted_by_locked_desc()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\LockTrait</className>
      <methodName>test_lock_with_user_role_and_get_denied</methodName>
      <methodSignature>test_lock_with_user_role_and_get_denied()</methodSignature>
      <fullMethod>test_lock_with_user_role_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\LockTrait</className>
      <methodName>test_lock_with_admin_role_and_succeed</methodName>
      <methodSignature>test_lock_with_admin_role_and_succeed()</methodSignature>
      <fullMethod>test_lock_with_admin_role_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\LockTrait</className>
      <methodName>test_lock_with_admin_role_and_succeed_with_json</methodName>
      <methodSignature>test_lock_with_admin_role_and_succeed_with_json()</methodSignature>
      <fullMethod>test_lock_with_admin_role_and_succeed_with_json()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\RestoreTrait</className>
      <methodName>test_guest_cannot_restore</methodName>
      <methodSignature>test_guest_cannot_restore()</methodSignature>
      <fullMethod>test_guest_cannot_restore()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\RestoreTrait</className>
      <methodName>test_restore_as_standard_user_and_succeed</methodName>
      <methodSignature>test_restore_as_standard_user_and_succeed()</methodSignature>
      <fullMethod>test_restore_as_standard_user_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\RestoreTrait</className>
      <methodName>test_restore_as_standard_user_using_json_and_succeed</methodName>
      <methodSignature>test_restore_as_standard_user_using_json_and_succeed()</methodSignature>
      <fullMethod>test_restore_as_standard_user_using_json_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\RestoreTrait</className>
      <methodName>test_restore_as_standard_user_and_succeed_with_redirect_to_index_with_only_trash</methodName>
      <methodSignature>test_restore_as_standard_user_and_succeed_with_redirect_to_index_with_only_trash()</methodSignature>
      <fullMethod>test_restore_as_standard_user_and_succeed_with_redirect_to_index_with_only_trash()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\RestoreTrait</className>
      <methodName>test_restore_with_user_role_and_get_denied</methodName>
      <methodSignature>test_restore_with_user_role_and_get_denied()</methodSignature>
      <fullMethod>test_restore_with_user_role_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\RestoreTrait</className>
      <methodName>test_restore_with_admin_role_and_succeed</methodName>
      <methodSignature>test_restore_with_admin_role_and_succeed()</methodSignature>
      <fullMethod>test_restore_with_admin_role_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\ShowTrait</className>
      <methodName>test_guest_cannot_render_show_view</methodName>
      <methodSignature>test_guest_cannot_render_show_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_show_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\ShowTrait</className>
      <methodName>test_show_view_rendered_by_user</methodName>
      <methodSignature>test_show_view_rendered_by_user()</methodSignature>
      <fullMethod>test_show_view_rendered_by_user()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\ShowTrait</className>
      <methodName>test_show_info_with_user_using_json</methodName>
      <methodSignature>test_show_info_with_user_using_json()</methodSignature>
      <fullMethod>test_show_info_with_user_using_json()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\UnlockTrait</className>
      <methodName>test_guest_cannot_unlock</methodName>
      <methodSignature>test_guest_cannot_unlock()</methodSignature>
      <fullMethod>test_guest_cannot_unlock()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\UnlockTrait</className>
      <methodName>test_unlock_as_standard_user_and_succeed</methodName>
      <methodSignature>test_unlock_as_standard_user_and_succeed()</methodSignature>
      <fullMethod>test_unlock_as_standard_user_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\UnlockTrait</className>
      <methodName>test_unlock_as_standard_user_using_json_and_succeed</methodName>
      <methodSignature>test_unlock_as_standard_user_using_json_and_succeed()</methodSignature>
      <fullMethod>test_unlock_as_standard_user_using_json_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\UnlockTrait</className>
      <methodName>test_unlock_as_standard_user_and_succeed_with_redirect_to_index_with_sorted_by_unlocked_desc</methodName>
      <methodSignature>test_unlock_as_standard_user_and_succeed_with_redirect_to_index_with_sorted_by_unlocked_desc()</methodSignature>
      <fullMethod>test_unlock_as_standard_user_and_succeed_with_redirect_to_index_with_sorted_by_unlocked_desc()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\UnlockTrait</className>
      <methodName>test_unlock_with_user_role_and_get_denied</methodName>
      <methodSignature>test_unlock_with_user_role_and_get_denied()</methodSignature>
      <fullMethod>test_unlock_with_user_role_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\UnlockTrait</className>
      <methodName>test_unlock_with_admin_role_and_succeed</methodName>
      <methodSignature>test_unlock_with_admin_role_and_succeed()</methodSignature>
      <fullMethod>test_unlock_with_admin_role_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\UnlockTrait</className>
      <methodName>test_unlock_with_admin_role_and_succeed_with_json</methodName>
      <methodSignature>test_unlock_with_admin_role_and_succeed_with_json()</methodSignature>
      <fullMethod>test_unlock_with_admin_role_and_succeed_with_json()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>getModel</methodName>
      <methodSignature>getModel(): Illuminate\Database\Eloquent\Model</methodSignature>
      <fullMethod>getModel(): Illuminate\Database\Eloquent\Model</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>getModelClass</methodName>
      <methodSignature>getModelClass(): string</methodSignature>
      <fullMethod>getModelClass(): string</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>test_model_instance</methodName>
      <methodSignature>test_model_instance(): void</methodSignature>
      <fullMethod>test_model_instance(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>verifyRelationship</methodName>
      <methodSignature>verifyRelationship(string $relationshipType, string $accessor): bool</methodSignature>
      <fullMethod>verifyRelationship(string $relationshipType, string $accessor): bool</fullMethod>
      <crap>240</crap>
      <complexity>15</complexity>
      <coverage>0</coverage>
      <crapLoad>15</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>verifyRelationships</methodName>
      <methodSignature>verifyRelationships(): array</methodSignature>
      <fullMethod>verifyRelationships(): array</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>verifyRelationshipHasOne</methodName>
      <methodSignature>verifyRelationshipHasOne(Illuminate\Database\Eloquent\Model $model, string $accessor): void</methodSignature>
      <fullMethod>verifyRelationshipHasOne(Illuminate\Database\Eloquent\Model $model, string $accessor): void</fullMethod>
      <crap>342</crap>
      <complexity>18</complexity>
      <coverage>0</coverage>
      <crapLoad>18</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>verifyRelationshipHasMany</methodName>
      <methodSignature>verifyRelationshipHasMany(Illuminate\Database\Eloquent\Model $model, string $accessor): void</methodSignature>
      <fullMethod>verifyRelationshipHasMany(Illuminate\Database\Eloquent\Model $model, string $accessor): void</fullMethod>
      <crap>210</crap>
      <complexity>14</complexity>
      <coverage>0</coverage>
      <crapLoad>14</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>testVerifyRelationships</methodName>
      <methodSignature>testVerifyRelationships(): void</methodSignature>
      <fullMethod>testVerifyRelationships(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\MockingTrait</className>
      <methodName>mockRequest</methodName>
      <methodSignature>mockRequest(string $uri, string $method, array $parameters, array $cookies, array $files, array $server, $content)</methodSignature>
      <fullMethod>mockRequest(string $uri, string $method, array $parameters, array $cookies, array $files, array $server, $content)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\MockingTrait</className>
      <methodName>invokeProtected</methodName>
      <methodSignature>invokeProtected($out, $method, array $params): mixed</methodSignature>
      <fullMethod>invokeProtected($out, $method, array $params): mixed</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\MockingTrait</className>
      <methodName>setProtected</methodName>
      <methodSignature>setProtected($out, string $property, mixed $value): void</methodSignature>
      <fullMethod>setProtected($out, string $property, mixed $value): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models\Traits</package>
      <className>Playground\Test\Models\Traits\UserPrivileges</className>
      <methodName>getAttribute</methodName>
      <methodSignature>getAttribute($key)</methodSignature>
      <fullMethod>getAttribute($key)</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models\Traits</package>
      <className>Playground\Test\Models\Traits\UserPrivileges</className>
      <methodName>hasPrivilege</methodName>
      <methodSignature>hasPrivilege(mixed $privilege): bool</methodSignature>
      <fullMethod>hasPrivilege(mixed $privilege): bool</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models\Traits</package>
      <className>Playground\Test\Models\Traits\UserPrivileges</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(mixed $role): bool</methodSignature>
      <fullMethod>hasRole(mixed $role): bool</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models\Traits</package>
      <className>Playground\Test\Models\Traits\UserPrivileges</className>
      <methodName>isAdmin</methodName>
      <methodSignature>isAdmin(): bool</methodSignature>
      <fullMethod>isAdmin(): bool</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models</package>
      <className>Playground\Test\Models\UserWithChildren</className>
      <methodName>children</methodName>
      <methodSignature>children(): Illuminate\Database\Eloquent\Relations\HasMany</methodSignature>
      <fullMethod>children(): Illuminate\Database\Eloquent\Relations\HasMany</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models</package>
      <className>Playground\Test\Models\UserWithChildren</className>
      <methodName>parent</methodName>
      <methodSignature>parent(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>parent(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models</package>
      <className>Playground\Test\Models\UserWithRole</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(mixed $role): bool</methodSignature>
      <fullMethod>hasRole(mixed $role): bool</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models</package>
      <className>Playground\Test\Models\UserWithRole</className>
      <methodName>isAdmin</methodName>
      <methodSignature>isAdmin(): bool</methodSignature>
      <fullMethod>isAdmin(): bool</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot()</methodSignature>
      <fullMethod>boot()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(): void</methodSignature>
      <fullMethod>about(): void</fullMethod>
      <crap>7</crap>
      <complexity>7</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\ServiceProvider</className>
      <methodName>version</methodName>
      <methodSignature>version(): string</methodSignature>
      <fullMethod>version(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\SqlTrait</className>
      <methodName>setUp</methodName>
      <methodSignature>setUp(): void</methodSignature>
      <fullMethod>setUp(): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\SqlTrait</className>
      <methodName>replace_quotes</methodName>
      <methodSignature>replace_quotes(string $sql): string</methodSignature>
      <fullMethod>replace_quotes(string $sql): string</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Http\Requests</package>
      <className>Playground\Test\Unit\Http\Requests\RequestCase</className>
      <methodName>getRequest</methodName>
      <methodSignature>getRequest(): Illuminate\Foundation\Http\FormRequest</methodSignature>
      <fullMethod>getRequest(): Illuminate\Foundation\Http\FormRequest</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Http\Requests</package>
      <className>Playground\Test\Unit\Http\Requests\RequestCase</className>
      <methodName>getRequestClass</methodName>
      <methodSignature>getRequestClass(): string</methodSignature>
      <fullMethod>getRequestClass(): string</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Http\Requests</package>
      <className>Playground\Test\Unit\Http\Requests\RequestCase</className>
      <methodName>test_request_instance</methodName>
      <methodSignature>test_request_instance(): void</methodSignature>
      <fullMethod>test_request_instance(): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>getModel</methodName>
      <methodSignature>getModel(): Illuminate\Database\Eloquent\Model</methodSignature>
      <fullMethod>getModel(): Illuminate\Database\Eloquent\Model</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>getModelClass</methodName>
      <methodSignature>getModelClass(): string</methodSignature>
      <fullMethod>getModelClass(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>test_model_instance</methodName>
      <methodSignature>test_model_instance(): void</methodSignature>
      <fullMethod>test_model_instance(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>verifyRelationship</methodName>
      <methodSignature>verifyRelationship(string $relationshipType, string $accessor): bool</methodSignature>
      <fullMethod>verifyRelationship(string $relationshipType, string $accessor): bool</fullMethod>
      <crap>17.57</crap>
      <complexity>10</complexity>
      <coverage>57.69</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>verifyRelationships</methodName>
      <methodSignature>verifyRelationships(): array</methodSignature>
      <fullMethod>verifyRelationships(): array</fullMethod>
      <crap>9.29</crap>
      <complexity>7</complexity>
      <coverage>64</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>test_verify_model_relationships</methodName>
      <methodSignature>test_verify_model_relationships(): void</methodSignature>
      <fullMethod>test_verify_model_relationships(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\WithFaker</className>
      <methodName>faker</methodName>
      <methodSignature>faker(string $locale): Faker\Generator</methodSignature>
      <fullMethod>faker(string $locale): Faker\Generator</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ContentTrait</className>
      <methodName>purify</methodName>
      <methodSignature>purify($item)</methodSignature>
      <fullMethod>purify($item)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ContentTrait</className>
      <methodName>exorcise</methodName>
      <methodSignature>exorcise($item)</methodSignature>
      <fullMethod>exorcise($item)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ContentTrait</className>
      <methodName>getHtmlPurifier</methodName>
      <methodSignature>getHtmlPurifier(array $config): HTMLPurifier</methodSignature>
      <fullMethod>getHtmlPurifier(array $config): HTMLPurifier</fullMethod>
      <crap>9</crap>
      <complexity>9</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ContentTrait</className>
      <methodName>setHtmlPurifier</methodName>
      <methodSignature>setHtmlPurifier(HTMLPurifier $purifier): self</methodSignature>
      <fullMethod>setHtmlPurifier(HTMLPurifier $purifier): self</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ContentTrait</className>
      <methodName>encodeURIComponent</methodName>
      <methodSignature>encodeURIComponent(string $str): string</methodSignature>
      <fullMethod>encodeURIComponent(string $str): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterArray</methodName>
      <methodSignature>filterArray(mixed $value): array</methodSignature>
      <fullMethod>filterArray(mixed $value): array</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterArrayToJson</methodName>
      <methodSignature>filterArrayToJson(mixed $value): string|false</methodSignature>
      <fullMethod>filterArrayToJson(mixed $value): string|false</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterBits</methodName>
      <methodSignature>filterBits($value, $exponent): int</methodSignature>
      <fullMethod>filterBits($value, $exponent): int</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterBoolean</methodName>
      <methodSignature>filterBoolean(mixed $value): bool</methodSignature>
      <fullMethod>filterBoolean(mixed $value): bool</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterDate</methodName>
      <methodSignature>filterDate(mixed $value, $locale): ?string</methodSignature>
      <fullMethod>filterDate(mixed $value, $locale): ?string</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterDateAsCarbon</methodName>
      <methodSignature>filterDateAsCarbon($value, $locale): ?Illuminate\Support\Carbon</methodSignature>
      <fullMethod>filterDateAsCarbon($value, $locale): ?Illuminate\Support\Carbon</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterEmail</methodName>
      <methodSignature>filterEmail(mixed $email): string</methodSignature>
      <fullMethod>filterEmail(mixed $email): string</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterFloat</methodName>
      <methodSignature>filterFloat(mixed $value, $locale): ?float</methodSignature>
      <fullMethod>filterFloat(mixed $value, $locale): ?float</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterHtml</methodName>
      <methodSignature>filterHtml(string $content): string</methodSignature>
      <fullMethod>filterHtml(string $content): string</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterInteger</methodName>
      <methodSignature>filterInteger(mixed $value, $locale): int</methodSignature>
      <fullMethod>filterInteger(mixed $value, $locale): int</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterIntegerId</methodName>
      <methodSignature>filterIntegerId(mixed $value): ?int</methodSignature>
      <fullMethod>filterIntegerId(mixed $value): ?int</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterIntegerPositive</methodName>
      <methodSignature>filterIntegerPositive(mixed $value, $absolute): int</methodSignature>
      <fullMethod>filterIntegerPositive(mixed $value, $absolute): int</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterPercent</methodName>
      <methodSignature>filterPercent(mixed $value, $locale): ?float</methodSignature>
      <fullMethod>filterPercent(mixed $value, $locale): ?float</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterStatus</methodName>
      <methodSignature>filterStatus(array $input): array</methodSignature>
      <fullMethod>filterStatus(array $input): array</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterSystemFields</methodName>
      <methodSignature>filterSystemFields(array $input): array</methodSignature>
      <fullMethod>filterSystemFields(array $input): array</fullMethod>
      <crap>13</crap>
      <complexity>13</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Filters</package>
      <className>Playground\Filters\ModelTrait</className>
      <methodName>filterUuid</methodName>
      <methodSignature>filterUuid(mixed $value): ?string</methodSignature>
      <fullMethod>filterUuid(mixed $value): ?string</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\Abilities</className>
      <methodName>hasAbility</methodName>
      <methodSignature>hasAbility(mixed $ability): bool</methodSignature>
      <fullMethod>hasAbility(mixed $ability): bool</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\Abilities</className>
      <methodName>addAbility</methodName>
      <methodSignature>addAbility(mixed $ability): void</methodSignature>
      <fullMethod>addAbility(mixed $ability): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\Abilities</className>
      <methodName>removeAbility</methodName>
      <methodSignature>removeAbility(mixed $ability): void</methodSignature>
      <fullMethod>removeAbility(mixed $ability): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\Admin</className>
      <methodName>isAdmin</methodName>
      <methodSignature>isAdmin(): bool</methodSignature>
      <fullMethod>isAdmin(): bool</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\Privileges</className>
      <methodName>hasPrivilege</methodName>
      <methodSignature>hasPrivilege(mixed $privilege): bool</methodSignature>
      <fullMethod>hasPrivilege(mixed $privilege): bool</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\Privileges</className>
      <methodName>addPrivilege</methodName>
      <methodSignature>addPrivilege(mixed $privilege): void</methodSignature>
      <fullMethod>addPrivilege(mixed $privilege): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\Privileges</className>
      <methodName>removePrivilege</methodName>
      <methodSignature>removePrivilege(mixed $privilege): void</methodSignature>
      <fullMethod>removePrivilege(mixed $privilege): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\Role</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(mixed $role): bool</methodSignature>
      <fullMethod>hasRole(mixed $role): bool</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\Role</className>
      <methodName>addRole</methodName>
      <methodSignature>addRole(mixed $role): void</methodSignature>
      <fullMethod>addRole(mixed $role): void</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\Role</className>
      <methodName>removeRole</methodName>
      <methodSignature>removeRole(mixed $role): void</methodSignature>
      <fullMethod>removeRole(mixed $role): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\ScopeFilterColumns</className>
      <methodName>scopeFilterColumns</methodName>
      <methodSignature>scopeFilterColumns(Illuminate\Database\Eloquent\Builder $query, array $columns, array $validated): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterColumns(Illuminate\Database\Eloquent\Builder $query, array $columns, array $validated): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>31</crap>
      <complexity>31</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\ScopeFilterDates</className>
      <methodName>scopeFilterDates</methodName>
      <methodSignature>scopeFilterDates(Illuminate\Database\Eloquent\Builder $query, array $dates, array $validated): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterDates(Illuminate\Database\Eloquent\Builder $query, array $dates, array $validated): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>43</crap>
      <complexity>43</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\ScopeFilterFlags</className>
      <methodName>scopeFilterFlags</methodName>
      <methodSignature>scopeFilterFlags(Illuminate\Database\Eloquent\Builder $query, array $flags, array $validated): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterFlags(Illuminate\Database\Eloquent\Builder $query, array $flags, array $validated): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>9</crap>
      <complexity>9</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\ScopeFilterIds</className>
      <methodName>scopeFilterIds</methodName>
      <methodSignature>scopeFilterIds(Illuminate\Database\Eloquent\Builder $query, array $ids, array $validated): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterIds(Illuminate\Database\Eloquent\Builder $query, array $ids, array $validated): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>27</crap>
      <complexity>27</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\ScopeFilterTrash</className>
      <methodName>scopeFilterTrash</methodName>
      <methodSignature>scopeFilterTrash(Illuminate\Database\Eloquent\Builder $query, string $visibility): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterTrash(Illuminate\Database\Eloquent\Builder $query, string $visibility): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>7</crap>
      <complexity>7</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\ScopeSort</className>
      <methodName>scopeSort</methodName>
      <methodSignature>scopeSort(Illuminate\Database\Eloquent\Builder $query, mixed $sort): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeSort(Illuminate\Database\Eloquent\Builder $query, mixed $sort): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>16</crap>
      <complexity>16</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\WithChildren</className>
      <methodName>children</methodName>
      <methodSignature>children(): Illuminate\Database\Eloquent\Relations\HasMany</methodSignature>
      <fullMethod>children(): Illuminate\Database\Eloquent\Relations\HasMany</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\WithCreator</className>
      <methodName>creator</methodName>
      <methodSignature>creator(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>creator(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\WithModifier</className>
      <methodName>modifier</methodName>
      <methodSignature>modifier(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>modifier(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\WithOwner</className>
      <methodName>owner</methodName>
      <methodSignature>owner(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>owner(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Traits</package>
      <className>Playground\Models\Traits\WithParent</className>
      <methodName>parent</methodName>
      <methodSignature>parent(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>parent(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(array $config): void</methodSignature>
      <fullMethod>about(array $config): void</fullMethod>
      <crap>9</crap>
      <complexity>9</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>version</methodName>
      <methodSignature>version(): string</methodSignature>
      <fullMethod>version(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
  </methods>
</crap_result>
